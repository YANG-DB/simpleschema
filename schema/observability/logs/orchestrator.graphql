#Fields that describe the resources which container orchestrators manage or act upon
type Orchestrator implements BaseRecord{
    #'Date/time when the event originated.
    #
    #        This is the date/time extracted from the event, typically representing when
    #        the event was generated by the source.
    #
    #        If the event source has no original timestamp, this value is typically populated
    #        by the first time the event was received by the pipeline.
    #
    #        Required field for all events.'
    timestamp : Time!
    #'Custom key/value pairs.
    #
    #        Can be used to add meta information to events. Should not contain nested objects.
    #        All values are stored as keyword.
    #
    #        Example: '{"application": "foo-bar", "env": "production"}'
    labels : JSON
    # 'For log events the message field contains the log message, optimized
    #        for viewing in a log viewer.
    #
    #        For structured logs without an original message field, other fields can be
    #        concatenated to form a human-readable summary of the event.
    #
    #        If multiple messages exist, they can be combined into one message.'
    message: String
    # List of keywords used to tag each event.
    tags: [String]
    # Key-Value pairs representing vendor specific properties
    attributes: JSON

    #    API version being used to carry out the action
    apiVersion:String
    #    Unique ID of the cluster
    clusterId:ID
    #    Name of the cluster
    clusterName:String
    #   URL of the API used to manage the cluster
    clusterUrl:Url
    #   The version of the cluster
    clusterVersion:String
    #   Namespace in which the action is taking place
    namespace:String
    #orchestrator.organization
    # Organization affected by the event (for multi-tenant orchestrator setups)
    organization:String
    #    Orchestrator cluster type (e.g. kubernetes, nomad or cloudfoundry).
    type:String
}

type Resource {
    # Unique ID of the resource being acted upon.
    id:ID!
    #    IP address assigned to the resource associated with the event being observed. In the case of a Kubernetes Pod, this array would contain only one element: the IP of the Pod (as opposed to the Node on which the Pod is running).
    ip:IP
    #    Name of the resource being acted upon
    name:String
    #   Type of resource being acted upon
    type:String
    #   Type or kind of the parent resource associated with the event being observed. In Kubernetes, this will be the name of a built-in workload resource (e.g., Deployment, StatefulSet, DaemonSet)
    parentType:String
}